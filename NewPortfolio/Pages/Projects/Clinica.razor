@page "/projects/clinica"

<div class="section-title">
	Clinica
</div>

<div class="info-description">
	<div class="info-paragraph">
		Este projeto surgiu com o propósito de suprir as demandas essenciais das clínicas, possibilitando o registro detalhado das mesmas através de uma plataforma web intuitiva. Uma vez cadastrada,
		a clínica ganha a capacidade de agendar consultas para seus pacientes de maneira eficaz e prática.
	</div>
	<div class="info-paragraph">
		A interface de usuário, FrontEnd,
		foi meticulosamente desenvolvida empregando as mais modernas tecnologias, como HTML5,
		CSS3 e Bootstrap5, além da poderosa abordagem do Blazor. No âmbito do BackEnd,
		o sistema foi construído utilizando uma abrangente Rest API baseada em .NetCore.
		Dois componentes essenciais estão em uso:
		bibliotecas dedicadas à implementação da lógica de negócios e à busca de informações no robusto banco de dados SQL Server.
	</div>
	<div class="info-paragraph">
		Essa abordagem híbrida, combinando as funcionalidades do FrontEnd e BackEnd,
		resulta em um sistema coeso e altamente funcional.
		Através da plataforma, as clínicas podem gerenciar seu fluxo de atendimento de forma otimizada,
		proporcionando uma experiência satisfatória tanto para elas quanto para os pacientes atendidos.
	</div>
</div>

<div class="project-images-div">
	<img src="Images/Clinica/@imagePath" class="project-page-picture" />
</div>

<div class="project-roller-buttons-div">
	<div>
		<button class="portfolio-button" @onclick=DecrementImage> Anterior </button>
	</div>
	<div class="fw-bold fs-2">
		@image / @lastImage
	</div>
	<div>
		<button class="portfolio-button" @onclick=IncrementImage> Proximo </button>
	</div>
</div>

<div class="text-center mb-5">
	<a href="https://github.com/Arthuthu/ClinicaApp" class="project-github-link">
		Github
	</a>
</div>

<div class="text-center my-5">
	<a href="/" class="portfolio-button-anchor">Voltar</a>
</div>

@code {
	private static int image = 1;
	private static string imagePath = $"{image.ToString()}.png";
	private int lastImage = 14;

	private void IncrementImage()
	{
		if (image == lastImage)
		{
			image = 1;
			imagePath = $"{image.ToString()}.png";
			return;
		}

		image++;
		imagePath = $"{image.ToString()}.png";
	}

	private void DecrementImage()
	{
		if (image == 1)
		{
			image = lastImage;
			imagePath = $"{image.ToString()}.png";
			return;
		}

		image--;
		imagePath = $"{image.ToString()}.png";
	}
}
