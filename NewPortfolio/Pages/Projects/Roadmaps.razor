@page "/projects/roadmaps"

<div class="section-title">
	Roadmaps
</div>

<div class="info-description">
	<div class="info-paragraph">
		Roadmaps é um site desenvolvidor em Blazor que utiliza uma API que traz informações do banco de dados.
	</div>
	<div class="info-paragraph">
		O back-end foi desenvolvido em C#, utilizando uma REST Api, 2 bibliotecas que realizam a regra de
		negócio e fazendo a busca das informações com o ORM Dapper.
	</div>
	<div class="info-paragraph">
		O banco de dados utilizado é o SQL Server, onde foi criado as tabelas e stored procedures
		para executar os commands e querys no banco.
	</div>
	<div class="info-paragraph">
		Também foi utilizado bibliotecas como FluentValidation para garantir que os dados contenham
		informações válidas, Logging para guardar informações caso ocorra erros inesperados com o código.
	</div>
	<div class="info-paragraph">
		Foi desenvolvido também um projeto de testes que utiliza a biblioteca XUnit junto com FluentAssertions,
		AutoFixture e NSubstitute para garantir que o código esteja funcionando como esperado.
	</div>
</div>

<div class="project-images-div">
	<img src="Images/Roadmaps/@imagePath" class="project-page-picture" />
</div>

<div class="project-roller-buttons-div">
	<div>
		<button class="portfolio-button" @onclick=DecrementImage> Anterior </button>
	</div>
	<div class="fw-bold fs-2">
		@image / @lastImage
	</div>
	<div>
		<button class="portfolio-button" @onclick=IncrementImage> Proximo </button>
	</div>
</div>

<div class="text-center mb-5">
	<a href="https://github.com/Arthuthu/Roadmap" class="project-github-link">
		Github
	</a>
</div>

<div class="text-center my-5">
	<a href="/" class="portfolio-button-anchor">Voltar</a>
</div>

@code {
	private static int image = 1;
	private static string imagePath = $"{image.ToString()}.png";
	private int lastImage = 2;

	private void IncrementImage()
	{
		if (image == lastImage)
		{
			image = 1;
			imagePath = $"{image.ToString()}.png";
			return;
		}

		image++;
		imagePath = $"{image.ToString()}.png";
	}

	private void DecrementImage()
	{
		if (image == 1)
		{
			image = lastImage;
			imagePath = $"{image.ToString()}.png";
			return;
		}

		image--;
		imagePath = $"{image.ToString()}.png";
	}
}
